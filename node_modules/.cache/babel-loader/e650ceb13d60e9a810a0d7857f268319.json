{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Pages/Auth/changePassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport { Spin, notification } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nconst antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n  style: {\n    fontSize: 24,\n    \"color\": \"white\"\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }\n});\n\nconst ChangePassword = props => {\n  const {\n    requestResponse,\n    isLoading\n  } = useStoreState(state => state.auth);\n  const {\n    forgotPassword,\n    clearResponse\n  } = useStoreActions(Actions => Actions.auth);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const {\n    match: {\n      params\n    }\n  } = props;\n  console.log(params.token);\n\n  const openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Notification Title',\n      description: requestResponse.msg\n    });\n  };\n\n  useEffect(() => {\n    if (requestResponse !== null) {\n      if (requestResponse.type === \"success\") {\n        openNotificationWithIcon('success');\n      } else {\n        openNotificationWithIcon('error');\n      }\n\n      setTimeout(() => {\n        clearResponse();\n      }, 4000);\n    } else return;\n  }, [requestResponse]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const params = {\n      data: {\n        email: email\n      }\n    };\n    forgotPassword(params);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Create New Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-paper-plane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    name: \"password\",\n    placeholder: \"New Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-paper-plane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block btn-lg\",\n    disabled: \"disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    indicator: antIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"Send Mail\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Already Have an Account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 42\n    }\n  }, \"Login\"), \".\")))));\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Pages/Auth/changePassword.js"],"names":["React","useState","useEffect","Link","useStoreState","useStoreActions","Spin","notification","LoadingOutlined","antIcon","fontSize","ChangePassword","props","requestResponse","isLoading","state","auth","forgotPassword","clearResponse","Actions","password","setPassword","confirmPassword","setConfirmPassword","match","params","console","log","token","openNotificationWithIcon","type","message","description","msg","setTimeout","handleSubmit","e","preventDefault","data","email","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport {useStoreState, useStoreActions} from 'easy-peasy'\nimport { Spin,notification } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24, \"color\" : \"white\" }} spin />;\n    \nconst ChangePassword = (props) => {\n    const { requestResponse, isLoading } = useStoreState((state) => state.auth);\n    const {forgotPassword,clearResponse} = useStoreActions((Actions) => Actions.auth);\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const { match: { params } } =props;\n    console.log(params.token)\n    \n    const openNotificationWithIcon = type => {\n      notification[type]({\n        message: 'Notification Title',\n        description:requestResponse.msg\n      });\n    };\n\n    useEffect(() => {\n      if (requestResponse !== null) {\n        if (requestResponse.type === \"success\") {\n          openNotificationWithIcon('success')\n        } else {\n          openNotificationWithIcon('error')\n        }\n        setTimeout(() => {\n          clearResponse();\n        }, 4000);\n      } else return;\n    }, [requestResponse]);\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      const params = { \n        data:{\n          email: email,\n        }\n      };\n      forgotPassword(params);\n    };\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <div>\n          <div className=\"signup-form\">\n            <div>\n              <h2>Create New Password</h2>\n              <div className=\"form-group\">\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon\">\n                    <i className=\"fa fa-paper-plane\"></i>\n                  </span>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    placeholder=\"New Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required=\"required\"\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <span className=\"input-group-addon\">\n                    <i className=\"fa fa-paper-plane\"></i>\n                  </span>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required=\"required\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                {isLoading ? (\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block btn-lg\"\n                    disabled=\"disabled\"\n                  >\n                    <Spin indicator={antIcon} />\n                  </button>\n                ) : (\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block btn-lg\"\n                  >\n                    Send Mail\n                  </button>\n                )}\n              </div>\n              <div className=\"text-center\">\n                Already Have an Account? <Link to=\"/login\">Login</Link>.\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n}\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}