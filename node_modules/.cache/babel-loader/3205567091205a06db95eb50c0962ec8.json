{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"../configs/index\";\n\nclass HttpService {\n  constructor() {\n    this.postData = async (item, url) => {\n      return axios({\n        method: \"post\",\n        url: baseUrl + url,\n        data: item\n      }).then(res => res).catch(error => error.response.data);\n    };\n\n    this.getData = async url => {\n      const AuthStr = 'Bearer '.concat(localStorage.getItem(token));\n      axios.get(baseUrl + url, {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(response => {\n        // If request is good...\n        console.log(response.data);\n      }).catch(error => {\n        console.log('error ' + error);\n      });\n    };\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Store/services/httpService.js"],"names":["axios","baseUrl","HttpService","postData","item","url","method","data","then","res","catch","error","response","getData","AuthStr","concat","localStorage","getItem","token","get","headers","Authorization","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAChBC,QADgB,GACL,OAAOC,IAAP,EAAaC,GAAb,KAAqB;AAC9B,aAAOL,KAAK,CAAC;AACXM,QAAAA,MAAM,EAAE,MADG;AAEXD,QAAAA,GAAG,EAAEJ,OAAO,GAAGI,GAFJ;AAGXE,QAAAA,IAAI,EAAEH;AAHK,OAAD,CAAL,CAKJI,IALI,CAKEC,GAAD,IAASA,GALV,EAMJC,KANI,CAMGC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeL,IAN5B,CAAP;AAOD,KATe;;AAAA,SAWhBM,OAXgB,GAWN,MAAOR,GAAP,IAAe;AACvB,YAAMS,OAAO,GAAG,UAAUC,MAAV,CAAiBC,YAAY,CAACC,OAAb,CAAqBC,KAArB,CAAjB,CAAhB;AACAlB,MAAAA,KAAK,CAACmB,GAAN,CAAUlB,OAAO,GAAGI,GAApB,EAAyB;AAAEe,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEP;AAAjB;AAAX,OAAzB,EACCN,IADD,CACMI,QAAQ,IAAI;AACd;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACL,IAArB;AACD,OAJH,EAKCG,KALD,CAKQC,KAAD,IAAW;AACdW,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWZ,KAAvB;AACD,OAPH;AASD,KAtBe;AAAA;;AAAA;;AAwBlB,eAAeT,WAAf","sourcesContent":["import axios from \"axios\";\nimport { baseUrl } from \"../configs/index\";\n\nclass HttpService {\n  postData = async (item, url) => {\n    return axios({\n      method: \"post\",\n      url: baseUrl + url,\n      data: item,\n    })\n      .then((res) => res)\n      .catch((error) => error.response.data);\n  };\n\n  getData = async (url) => {\n    const AuthStr = 'Bearer '.concat(localStorage.getItem(token)); \n    axios.get(baseUrl + url, { headers: { Authorization: AuthStr } })\n    .then(response => {\n        // If request is good...\n        console.log(response.data);\n      })\n    .catch((error) => {\n        console.log('error ' + error);\n      });\n    \n  };\n}\nexport default HttpService;"]},"metadata":{},"sourceType":"module"}