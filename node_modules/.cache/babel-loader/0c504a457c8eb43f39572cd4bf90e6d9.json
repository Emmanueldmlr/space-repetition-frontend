{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Route/protectedRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport Extend from '../Components/layout';\nimport { token } from '../Store/configs/index';\nimport Loader from '../Components/loader';\n\nasync function getToken() {\n  const key = await token;\n  return key;\n}\n\nconst User = ({\n  isAuthed,\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => getToken() && isAuthed ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Extend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/login\",\n      location: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));\n\nexport default User;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Route/protectedRoute.js"],"names":["React","Redirect","Route","Extend","token","Loader","getToken","key","User","isAuthed","component","Component","rest","props","pathname","location","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,KAAR,QAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,eAAeC,QAAf,GAA0B;AACxB,QAAMC,GAAG,GAAG,MAAMH,KAAlB;AACA,SAAOG,GAAP;AACD;;AACD,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAS,EAACC,SAArB;AAAgC,KAAGC;AAAnC,CAAD,kBAET,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAK,IAC7BP,QAAQ,MAAMG,QAAd,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,CADF,gBAOI,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACE;AAAd;AAAhC,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFJ;;AAiBA,eAAeP,IAAf","sourcesContent":["import React from 'react'\nimport { Redirect, Route } from \"react-router-dom\";\nimport Extend from '../Components/layout'\nimport {token} from '../Store/configs/index'\nimport Loader from '../Components/loader'\n\nasync function getToken (){\n  const key = await token;\n  return key\n}\nconst User = ({isAuthed, component:Component, ...rest }) => (\n\n    <Route {...rest} render={ props => (\n      getToken() && isAuthed  ? (\n        <Loader>\n            <Extend>\n                <Component {...props} />\n            </Extend>\n        </Loader>\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", location: { from: props.location } }}\n          />\n        )\n  )} />\n)\n\nexport default User\n\n\n"]},"metadata":{},"sourceType":"module"}