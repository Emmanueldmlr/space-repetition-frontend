{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl, header } from \"../configs/index\";\nconst requestOption = header();\n\nclass HttpService {\n  constructor() {\n    this.postData = async (item, url) => {\n      return axios({\n        method: \"post\",\n        url: baseUrl + url,\n        data: item,\n        requestOption\n      }).then(res => res).catch(error => error.response.data);\n    };\n\n    this.getData = async url => {\n      const defaultOptions = {\n        url: baseUrl + url,\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      let instance = axios.create(defaultOptions);\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem('XscOe3Nc0ttKWpN4CY5U');\n      instance.interceptors.request.use(function (config) {\n        const token = localStorage.getItem('XscOe3Nc0ttKWpN4CY5U');\n        config.headers.Authorization = `Bearer ${token}`;\n        return config;\n      }).then(res => res).catch(error => error.response.data);\n    };\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Store/services/httpService.js"],"names":["axios","baseUrl","header","requestOption","HttpService","postData","item","url","method","data","then","res","catch","error","response","getData","defaultOptions","headers","instance","create","defaults","common","localStorage","getItem","interceptors","request","use","config","token","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,kBAAhC;AAEA,MAAMC,aAAa,GAAGD,MAAM,EAA5B;;AACA,MAAME,WAAN,CAAkB;AAAA;AAAA,SAChBC,QADgB,GACL,OAAOC,IAAP,EAAaC,GAAb,KAAqB;AAC9B,aAAOP,KAAK,CAAC;AACXQ,QAAAA,MAAM,EAAE,MADG;AAEXD,QAAAA,GAAG,EAAEN,OAAO,GAAGM,GAFJ;AAGXE,QAAAA,IAAI,EAAEH,IAHK;AAIXH,QAAAA;AAJW,OAAD,CAAL,CAMJO,IANI,CAMEC,GAAD,IAASA,GANV,EAOJC,KAPI,CAOGC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeL,IAP5B,CAAP;AAQD,KAVe;;AAAA,SAYhBM,OAZgB,GAYN,MAAOR,GAAP,IAAe;AACvB,YAAMS,cAAc,GAAG;AACrBT,QAAAA,GAAG,EAAEN,OAAO,GAAGM,GADM;AAErBC,QAAAA,MAAM,EAAE,KAFa;AAGrBS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHY,OAAvB;AAOA,UAAIC,QAAQ,GAAGlB,KAAK,CAACmB,MAAN,CAAaH,cAAb,CAAf;AACAhB,MAAAA,KAAK,CAACoB,QAAN,CAAeH,OAAf,CAAuBI,MAAvB,CAA8B,eAA9B,IAAiDC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAjD;AACAL,MAAAA,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAClD,cAAMC,KAAK,GAAGN,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAd;AACAI,QAAAA,MAAM,CAACV,OAAP,CAAeY,aAAf,GAAkC,UAASD,KAAM,EAAjD;AACA,eAAOD,MAAP;AACD,OAJD,EAIGjB,IAJH,CAISC,GAAD,IAASA,GAJjB,EAKCC,KALD,CAKQC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeL,IALjC;AASD,KA/Be;AAAA;;AAAA;;AAiClB,eAAeL,WAAf","sourcesContent":["import axios from \"axios\";\nimport { baseUrl, header } from \"../configs/index\";\n\nconst requestOption = header();\nclass HttpService {\n  postData = async (item, url) => {\n    return axios({\n      method: \"post\",\n      url: baseUrl + url,\n      data: item,\n      requestOption,\n    })\n      .then((res) => res)\n      .catch((error) => error.response.data);\n  };\n\n  getData = async (url) => {\n    const defaultOptions = {\n      url: baseUrl + url,\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    let instance = axios.create(defaultOptions);\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('XscOe3Nc0ttKWpN4CY5U');\n    instance.interceptors.request.use(function (config) {\n      const token = localStorage.getItem('XscOe3Nc0ttKWpN4CY5U');\n      config.headers.Authorization =   `Bearer ${token}`\n      return config;\n    }).then((res) => res)\n    .catch((error) => error.response.data);\n\n\n    \n  };\n}\nexport default HttpService;"]},"metadata":{},"sourceType":"module"}