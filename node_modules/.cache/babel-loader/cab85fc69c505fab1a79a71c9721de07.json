{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Pages/Others/accountVerification.js\";\nimport React, { useEffect } from 'react';\nimport { Result, Button } from \"antd\";\nimport { sessionItem } from '../../Store/configs/index';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\n\nfunction AccountVerification() {\n  const user = JSON.parse(sessionStorage.getItem(sessionItem));\n  const {\n    isLoading,\n    requestResponse\n  } = useStoreState(state => state.auth);\n  const resendToken = useStoreActions(Actions => Actions.auth.resendToken);\n\n  const openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Notification Title',\n      description: requestResponse.msg\n    });\n  };\n\n  useEffect(() => {\n    if (requestResponse !== null) {\n      if (requestResponse.type === \"success\") {\n        openNotificationWithIcon('success');\n      } else {\n        openNotificationWithIcon('error');\n      }\n\n      setTimeout(() => {\n        clearResponse();\n      }, 4000);\n    } else return;\n  }, [isLoading]);\n\n  const sendLink = token => {\n    resendToken(token);\n  };\n\n  return /*#__PURE__*/React.createElement(Result, {\n    status: \"warning\",\n    title: \"Your Account is not Yet Verified\",\n    subTitle: \"Kindly Click on the Button in the Email Sent to you or Click on the Button Below\",\n    extra: isLoading ? /*#__PURE__*/React.createElement(Button, {\n      disabled: true,\n      type: \"primary\",\n      key: \"console\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(Button, {\n      onClick: () => sendLink(user.token),\n      type: \"primary\",\n      key: \"console\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Resend Email\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default AccountVerification;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Pages/Others/accountVerification.js"],"names":["React","useEffect","Result","Button","sessionItem","useStoreActions","useStoreState","AccountVerification","user","JSON","parse","sessionStorage","getItem","isLoading","requestResponse","state","auth","resendToken","Actions","openNotificationWithIcon","type","notification","message","description","msg","setTimeout","clearResponse","sendLink","token"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,eAAR,EAAyBC,aAAzB,QAA6C,YAA7C;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuBR,WAAvB,CAAX,CAAb;AACA,QAAM;AAACS,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAA8BR,aAAa,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjD;AACA,QAAMC,WAAW,GAAGZ,eAAe,CAACa,OAAO,IAAIA,OAAO,CAACF,IAAR,CAAaC,WAAzB,CAAnC;;AACA,QAAME,wBAAwB,GAAGC,IAAI,IAAI;AACvCC,IAAAA,YAAY,CAACD,IAAD,CAAZ,CAAmB;AACjBE,MAAAA,OAAO,EAAE,oBADQ;AAEjBC,MAAAA,WAAW,EAACT,eAAe,CAACU;AAFX,KAAnB;AAID,GALD;;AAOAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,eAAe,KAAK,IAAxB,EAA8B;AAC5B,UAAIA,eAAe,CAACM,IAAhB,KAAyB,SAA7B,EAAwC;AACtCD,QAAAA,wBAAwB,CAAC,SAAD,CAAxB;AACD,OAFD,MAEO;AACLA,QAAAA,wBAAwB,CAAC,OAAD,CAAxB;AACD;;AACDM,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,aAAa;AACd,OAFS,EAEP,IAFO,CAAV;AAGD,KATD,MASO;AACR,GAXQ,EAWN,CAACb,SAAD,CAXM,CAAT;;AAaA,QAAMc,QAAQ,GAAIC,KAAD,IAAW;AAC1BX,IAAAA,WAAW,CAACW,KAAD,CAAX;AACD,GAFD;;AAGA,sBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,SADT;AAEE,IAAA,KAAK,EAAC,kCAFR;AAGE,IAAA,QAAQ,EAAC,kFAHX;AAIE,IAAA,KAAK,EACDf,SAAS,gBACP,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,IAAI,EAAC,SAAtB;AAAgC,MAAA,GAAG,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADO,gBAKP,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMc,QAAQ,CAACnB,IAAI,CAACoB,KAAN,CAA/B;AAA6C,MAAA,IAAI,EAAC,SAAlD;AAA4D,MAAA,GAAG,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAiBD;;AAED,eAAerB,mBAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport { Result, Button } from \"antd\";\nimport {sessionItem} from '../../Store/configs/index'\nimport {useStoreActions, useStoreState} from 'easy-peasy'\n\nfunction AccountVerification() {\n  const user = JSON.parse(sessionStorage.getItem(sessionItem))\n  const {isLoading,requestResponse} = useStoreState(state => state.auth)\n  const resendToken = useStoreActions(Actions => Actions.auth.resendToken)\n  const openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Notification Title',\n      description:requestResponse.msg\n    });\n  };\n\n  useEffect(() => {\n    if (requestResponse !== null) {\n      if (requestResponse.type === \"success\") {\n        openNotificationWithIcon('success')\n      } else {\n        openNotificationWithIcon('error')\n      }\n      setTimeout(() => {\n        clearResponse();\n      }, 4000);\n    } else return;\n  }, [isLoading])\n  \n  const sendLink = (token) => {\n    resendToken(token)\n  }\n  return (\n    <Result\n      status=\"warning\"\n      title=\"Your Account is not Yet Verified\"\n      subTitle=\"Kindly Click on the Button in the Email Sent to you or Click on the Button Below\"\n      extra={\n          isLoading ? \n            <Button disabled type=\"primary\" key=\"console\">\n              Loading\n            </Button>\n          :\n            <Button onClick={() => sendLink(user.token)} type=\"primary\" key=\"console\">\n              Resend Email\n            </Button>\n      }\n    />\n  );\n}\n\nexport default AccountVerification\n"]},"metadata":{},"sourceType":"module"}