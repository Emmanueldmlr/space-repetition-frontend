{"ast":null,"code":"import { action, thunk } from \"easy-peasy\";\nimport { FetchTodoService } from '../services/todoService';\nconst todoModel = {\n  todos: [],\n  isLoading: false,\n  requestResponse: \"\",\n  fetchTodos: thunk(Actions => {\n    Actions.toggleIsLoading();\n    FetchTodoService().then(data => {\n      if (data.status === 200) {\n        console.log(data.data);\n        console.log(\"here it is\");\n      } else {\n        console.log(\"it is well\");\n      }\n    });\n  }),\n  //actions\n  toggleIsLoading: action(state => {\n    state.isLoading = !state.isLoading;\n  }),\n  updateRequestResponse: action((state, payload) => {\n    state.requestResponse = payload;\n  }),\n  clearResponse: action(state => {\n    state.requestResponse = null;\n  }),\n  fetchSuccess: action((state, payload) => {\n    state.todos = payload;\n  })\n};\nexport default todoModel;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Store/models/todoModel.js"],"names":["action","thunk","FetchTodoService","todoModel","todos","isLoading","requestResponse","fetchTodos","Actions","toggleIsLoading","then","data","status","console","log","state","updateRequestResponse","payload","clearResponse","fetchSuccess"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,YAA9B;AACA,SAAQC,gBAAR,QACO,yBADP;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAC,EADQ;AAEdC,EAAAA,SAAS,EAAE,KAFG;AAGdC,EAAAA,eAAe,EAAC,EAHF;AAKdC,EAAAA,UAAU,EAAEN,KAAK,CAAEO,OAAD,IAAa;AAC3BA,IAAAA,OAAO,CAACC,eAAR;AACAP,IAAAA,gBAAgB,GACbQ,IADH,CACSC,IAAD,IAAU;AACd,UAAGA,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,OAHD,MAII;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACF,KATH;AAUD,GAZc,CALH;AAmBV;AACJL,EAAAA,eAAe,EAAET,MAAM,CAAEe,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACV,SAAN,GAAkB,CAACU,KAAK,CAACV,SAAzB;AACH,GAFsB,CApBT;AAwBdW,EAAAA,qBAAqB,EAAEhB,MAAM,CAAC,CAACe,KAAD,EAAQE,OAAR,KAAoB;AAC9CF,IAAAA,KAAK,CAACT,eAAN,GAAwBW,OAAxB;AACH,GAF4B,CAxBf;AA4BdC,EAAAA,aAAa,EAAElB,MAAM,CAAEe,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACT,eAAN,GAAwB,IAAxB;AACH,GAFoB,CA5BP;AAgCda,EAAAA,YAAY,EAAEnB,MAAM,CAAC,CAACe,KAAD,EAAQE,OAAR,KAAmB;AACpCF,IAAAA,KAAK,CAACX,KAAN,GAAca,OAAd;AACH,GAFmB;AAhCN,CAAlB;AAqCA,eAAed,SAAf","sourcesContent":["import { action, thunk } from \"easy-peasy\";\nimport {FetchTodoService, \n} from '../services/todoService'\nconst todoModel = {\n    todos:[],\n    isLoading: false,\n    requestResponse:\"\",\n\n    fetchTodos: thunk((Actions) => {\n        Actions.toggleIsLoading();\n        FetchTodoService()\n          .then((data) => {\n            if(data.status === 200){\n                console.log(data.data)\n                console.log(\"here it is\")\n            }\n            else{\n                console.log(\"it is well\")\n            }\n          })\n      }),\n\n        //actions\n    toggleIsLoading: action((state) => {\n        state.isLoading = !state.isLoading;\n    }),\n\n    updateRequestResponse: action((state, payload) => {\n        state.requestResponse = payload;\n    }),\n\n    clearResponse: action((state) => {\n        state.requestResponse = null;\n    }),\n\n    fetchSuccess: action((state, payload)=> {\n        state.todos = payload;\n    })\n}\n\nexport default todoModel;"]},"metadata":{},"sourceType":"module"}