{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl, item } from \"../configs/index\";\n\nclass HttpService {\n  constructor() {\n    this.postData = async (payload, url) => {\n      const AuthStr = 'Bearer '.concat(localStorage.getItem(item));\n      console.log(AuthStr);\n      return axios.post(baseUrl + url, JSON.stringify(payload), {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(res => res).catch(error => error.response.data);\n    };\n\n    this.getData = async url => {\n      const AuthStr = 'Bearer '.concat(localStorage.getItem(item));\n      return axios.get(baseUrl + url, {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(res => res).catch(error => error.response.data);\n    };\n\n    this.putData = async (url, formData) => {\n      const AuthStr = 'Bearer '.concat(localStorage.getItem(item));\n      return axios.put(baseUrl + url, formData, {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(res => res).catch(error => error.response.data);\n    };\n\n    this.deleteData = async url => {\n      const AuthStr = 'Bearer '.concat(localStorage.getItem(item));\n      return axios.delete(baseUrl + url, {\n        headers: {\n          Authorization: AuthStr\n        }\n      }).then(res => res).catch(error => error.response.data);\n    };\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Store/services/httpService.js"],"names":["axios","baseUrl","item","HttpService","postData","payload","url","AuthStr","concat","localStorage","getItem","console","log","post","JSON","stringify","headers","Authorization","then","res","catch","error","response","data","getData","get","putData","formData","put","deleteData","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAiBC,IAAjB,QAA4B,kBAA5B;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAWhBC,QAXgB,GAWL,OAAOC,OAAP,EAAeC,GAAf,KAAuB;AAChC,YAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBC,YAAY,CAACC,OAAb,CAAqBR,IAArB,CAAjB,CAAhB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,aAAOP,KAAK,CAACa,IAAN,CAAWZ,OAAO,GAAGK,GAArB,EAA0BQ,IAAI,CAACC,SAAL,CAAeV,OAAf,CAA1B,EAAmD;AAAEW,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEV;AAAjB;AAAX,OAAnD,EACNW,IADM,CACAC,GAAD,IAASA,GADR,EAENC,KAFM,CAECC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,IAF1B,CAAP;AAGD,KAjBe;;AAAA,SAmBhBC,OAnBgB,GAmBN,MAAOlB,GAAP,IAAe;AACvB,YAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBC,YAAY,CAACC,OAAb,CAAqBR,IAArB,CAAjB,CAAhB;AACA,aAAOF,KAAK,CAACyB,GAAN,CAAUxB,OAAO,GAAGK,GAApB,EAAyB;AAAEU,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEV;AAAjB;AAAX,OAAzB,EACNW,IADM,CACAC,GAAD,IAASA,GADR,EAENC,KAFM,CAECC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,IAF1B,CAAP;AAGD,KAxBe;;AAAA,SA0BhBG,OA1BgB,GA0BN,OAAOpB,GAAP,EAAWqB,QAAX,KAAwB;AAChC,YAAMpB,OAAO,GAAG,UAAUC,MAAV,CAAiBC,YAAY,CAACC,OAAb,CAAqBR,IAArB,CAAjB,CAAhB;AACA,aAAOF,KAAK,CAAC4B,GAAN,CAAU3B,OAAO,GAAGK,GAApB,EAAyBqB,QAAzB,EAAmC;AAAEX,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEV;AAAjB;AAAX,OAAnC,EACNW,IADM,CACAC,GAAD,IAASA,GADR,EAENC,KAFM,CAECC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,IAF1B,CAAP;AAGD,KA/Be;;AAAA,SAiChBM,UAjCgB,GAiCH,MAAOvB,GAAP,IAAe;AAC1B,YAAMC,OAAO,GAAG,UAAUC,MAAV,CAAiBC,YAAY,CAACC,OAAb,CAAqBR,IAArB,CAAjB,CAAhB;AACA,aAAOF,KAAK,CAAC8B,MAAN,CAAa7B,OAAO,GAAGK,GAAvB,EAA4B;AAAEU,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEV;AAAjB;AAAX,OAA5B,EACNW,IADM,CACAC,GAAD,IAASA,GADR,EAENC,KAFM,CAECC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,IAF1B,CAAP;AAGD,KAtCe;AAAA;;AAAA;;AAwClB,eAAepB,WAAf","sourcesContent":["import axios from \"axios\";\nimport { baseUrl,item} from \"../configs/index\";\n\nclass HttpService {\n  // postData = async (item, url) => {\n  //   return axios({\n  //     method: \"post\",\n  //     url: baseUrl + url,\n  //     data: item,\n  //   })\n  //     .then((res) => res)\n  //     .catch((error) => error.response.data);\n  // };\n\n  postData = async (payload,url) => {\n    const AuthStr = 'Bearer '.concat(localStorage.getItem(item)); \n    console.log(AuthStr)\n    return axios.post(baseUrl + url, JSON.stringify(payload), { headers: { Authorization: AuthStr } })\n    .then((res) => res)\n    .catch((error) => error.response.data);\n  };\n\n  getData = async (url) => {\n    const AuthStr = 'Bearer '.concat(localStorage.getItem(item)); \n    return axios.get(baseUrl + url, { headers: { Authorization: AuthStr } })\n    .then((res) => res)\n    .catch((error) => error.response.data);\n  };\n\n  putData = async (url,formData) => {\n    const AuthStr = 'Bearer '.concat(localStorage.getItem(item)); \n    return axios.put(baseUrl + url, formData, { headers: { Authorization: AuthStr } })\n    .then((res) => res)\n    .catch((error) => error.response.data);\n  };\n\n  deleteData = async (url) => {\n    const AuthStr = 'Bearer '.concat(localStorage.getItem(item)); \n    return axios.delete(baseUrl + url, { headers: { Authorization: AuthStr } })\n    .then((res) => res)\n    .catch((error) => error.response.data);\n  };\n}\nexport default HttpService;"]},"metadata":{},"sourceType":"module"}