{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Pages/Protected/createTodo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { CloseCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nfunction CreateTodo() {\n  const {\n    addTodo,\n    clearResponse\n  } = useStoreActions(Actions => Actions.todo);\n  const {\n    requestResponse\n  } = useStoreState(state => state.todo);\n  const [title, setTitle] = useState('');\n  const [fields, setFields] = useState([]);\n\n  const openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Notification Title',\n      description: requestResponse.msg\n    });\n  };\n\n  useEffect(() => {\n    if (requestResponse !== null) {\n      if (requestResponse.type === \"success\") {\n        openNotificationWithIcon('success');\n      } else {\n        openNotificationWithIcon('error');\n      }\n\n      setTimeout(() => {\n        clearResponse();\n      }, 4000);\n    } else return;\n  }, [requestResponse]);\n\n  const handleChange = (i, event) => {\n    const values = [...fields];\n    values[i].value = event.target.value;\n    setFields(values);\n  };\n\n  const handleAdd = () => {\n    const values = [...fields];\n    values.push({\n      value: null\n    });\n    setFields(values);\n  };\n\n  const handleRemove = i => {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const params = {\n      title: title,\n      subTodo: fields\n    };\n    addTodo(params);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"18px\",\n      fontWeight: \"bolder\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Create a New Todo\"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"title\",\n    label: \"Title\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    required: true,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), fields.map((field, idx) => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"subTodo[]\",\n      label: \"Sub Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: `${field}-${idx}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n      type: \"button\",\n      onClick: () => handleRemove(idx),\n      style: {\n        \"float\": \"right\",\n        \"fontSize\": \"23px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: \"93%\"\n      },\n      type: \"text\",\n      placeholder: \"Enter text\",\n      value: field.value || \"\",\n      onChange: e => handleChange(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }))));\n  }), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"dashed\",\n    style: {\n      width: \"50%\"\n    },\n    onClick: () => handleAdd(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), \" Add New Todo Input\")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n}\n\nexport default CreateTodo;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/projects/React/space-repetition/src/Pages/Protected/createTodo.js"],"names":["React","useState","useEffect","Form","Input","Button","notification","CloseCircleOutlined","PlusOutlined","useStoreActions","useStoreState","layout","labelCol","span","wrapperCol","tailLayout","offset","CreateTodo","addTodo","clearResponse","Actions","todo","requestResponse","state","title","setTitle","fields","setFields","openNotificationWithIcon","type","message","description","msg","setTimeout","handleChange","i","event","values","value","target","handleAdd","push","handleRemove","splice","handleSubmit","e","preventDefault","params","subTodo","textAlign","fontSize","fontWeight","required","map","field","idx","width"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { Form, Input, Button,notification } from 'antd';\nimport { CloseCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport {useStoreActions, useStoreState}  from 'easy-peasy'\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nfunction CreateTodo() {\n    const {addTodo, clearResponse} = useStoreActions(Actions => Actions.todo)\n    const {requestResponse} = useStoreState(state=> state.todo)\n    const [title, setTitle] = useState('')\n    const [fields, setFields] = useState([]);\n\n    const openNotificationWithIcon = type => {\n        notification[type]({\n          message: 'Notification Title',\n          description:requestResponse.msg\n        });\n      };\n\n    useEffect(() => {\n    if (requestResponse !== null) {\n        if (requestResponse.type === \"success\") {\n        openNotificationWithIcon('success')\n        } else {\n        openNotificationWithIcon('error')\n        }\n        setTimeout(() => {\n        clearResponse();\n        }, 4000);\n    } else return;\n    }, [requestResponse]);\n\n    const  handleChange = (i, event) => {\n        const values = [...fields];\n        values[i].value = event.target.value;\n        setFields(values);\n    }\n\n    const  handleAdd = () => {\n        const values = [...fields];\n        values.push({ value: null });\n        setFields(values);\n    }\n\n    const handleRemove = (i) => {\n        const values = [...fields];\n        values.splice(i, 1);\n        setFields(values);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const params = {\n            title: title,\n            subTodo: fields\n        }\n        addTodo(params)\n    }\n\n\n    return (\n        <Form {...layout}>\n            <p style={{ textAlign: \"center\", fontSize: \"18px\", fontWeight: \"bolder\" }}>\n                Create a New Todo\n            </p>\n            <Form.Item name=\"title\" label=\"Title\" rules={[{ required: true }]}>\n                <Input required value={title} onChange={(e) => setTitle(e.target.value)} />\n            </Form.Item>\n            {fields.map((field, idx) => {           \n                return (\n                    <Form.Item name=\"subTodo[]\" label=\"Sub Todo\">\n                        <div key={`${field}-${idx}`}>\n                            <div>\n                                <CloseCircleOutlined type=\"button\" onClick={() => handleRemove(idx)} style={{ \"float\":\"right\", \"fontSize\":\"23px\" }} />\n                                <Input\n                                style={{ width: \"93%\" }}\n                                type=\"text\"\n                                placeholder=\"Enter text\"\n                                value={field.value || \"\"}\n                                onChange={e => handleChange(idx, e)}\n                                />\n                            </div>\n                        </div>\n                    </Form.Item>\n                    );\n                })\n            }  \n            <Form.Item {...tailLayout}>\n                <Button\n                type=\"dashed\"\n                style={{ width: \"50%\" }}\n                onClick={() => handleAdd()}\n                >\n                <PlusOutlined /> Add New Todo Input\n                </Button>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n            <Button onClick={handleSubmit} type=\"primary\" htmlType=\"submit\">\n            Submit\n            </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default CreateTodo\n\n\n\n"]},"metadata":{},"sourceType":"module"}